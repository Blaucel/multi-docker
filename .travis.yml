# Automatización mediante travis
# Especificamos docker como dependencia
sudo: required
services:
  - docker

# Montamos la version test del proyecto de React
before_install:
  - docker build -t emilioroldan/react-test -f ./client/Dockerfile.dev ./client

#Corremos los tests
script:
  - docker run -e CI=true emilioroldan/react-test npm test

# Montamos las verisones de producción de todos los proyectos del multicontenedor
after_success:
  - docker build -t emilioroldan/multi-client ./client
  - docker build -t emilioroldan/multi-nginx ./nginx
  - docker build -t emilioroldan/multi-server ./server
  - docker build -t emilioroldan/multi-worker ./worker

# Logeamos en docker CLI, lo haremos con variables ambientales de Travis CI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

# Subir todas las imágenes a Docker Hub
  - docker push emilioroldan/multi-client
  - docker push emilioroldan/multi-nginx
  - docker push emilioroldan/multi-server
  - docker push emilioroldan/multi-worker

# Decirle a Elastic Beanstalk que actualice
deploy:
  provider: elasticbeanstalk
  region: 'eu-west-3'
  app: 'multi-docker'
  env: 'Multidocker-env'
  bucket_name: 'elasticbeanstalk-eu-west-3-651706220970'
  bucket_path: 'docker-multi'
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY